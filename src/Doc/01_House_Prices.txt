這個檔案包含01_House_Prices.py所有細節:


1. DataFrame 是 Pandas 庫中的一種數據結構，用於表示表格數據。
它類似於電子表格中的表格或數據庫中的數據表，由行和列組成。
每個列可以有不同的數據類型，例如數字、字符串、布爾值等。
=>而這裡，對數轉換是個技巧，目的是讓原本的資料更加接近常態分佈。

2.skew 是指偏度（Skewness），它是一種統計指標，用於描述數據分布的非對稱性。
偏度的值可以告訴我們數據分布的形狀以及它相對於正態分布的偏斜情況。
=>skew, 是來自 Scipy 庫的統計函數。
具體而言：
    A. 正偏度（右偏）：如果偏度值大於0，表示數據分布在右側較長，左側較短，數據集中在分布的左側。
    B. 負偏度（左偏）：如果偏度值小於0，表示數據分布在左側較長，右側較短，數據集中在分布的右側。
    C. 零偏度：如果偏度值接近0，表示數據分布較為對稱，類似於正態分布。

3. rcParams 是 Matplotlib 庫中的一個對象，用於控制圖形的各種屬性和設置。
通過設置 rcParams，你可以全局改變圖形的樣式，而不需要在每次創建圖形時都進行設置。
=>這裡是設置，整個程式碼圖形係數，如此一來就不必每次都設置一次。

4. "loc"是Pandas的API函式，用來基於標籤（label）進行選擇特定範圍的數據。
例: "print(data.loc[[0, 2], ['A', 'C']])"，就是選取
    data中0 ~ 2的行數據，A ~ C的列數據。

補充:"iloc"也是Pandas的API函式，是基於整數位置（integer location）進行選擇。
    例: "print(data.iloc[[0, 2], [0, 2]])"，就是選取，第0 ~ 2的行數據，
        第0 ~ 2的列數據。

5. 第56行中 "numeric_feats = all_data.dtypes[all_data.dtypes != "object"].index"
選取"非object"的數據類型為特徵(也就是數值類型的資料)
再以index獲取篩選後列的標籤，即列名。
(註:index本身的數據類型就是object，所以對打印結果不避疑惑)

6. "skewed_feats = train[numeric_feats].apply(lambda x: skew(x.dropna()))"
已經知道skew是計算篇度，而dropna()是丟棄缺失值NaN。
lambda函數是簡短的匿名函數，可以在需要函數的地方快速定義。
=>此處lambda函數接收x變數，應用在train[numeric_feats]中，並執行dropna()和計算偏度

7. "cc_data = pd.get_dummies(train['LotShape'])"
其中，get_dummies()是數據類型任務作One-Hot Encoding的API函數。
若是分類任務作One-Hot Encoding，就會用到to_categorical()這個API函數。



8. "all_data = all_data.fillna(all_data[:train.shape[0]].mean())"
這裡是以all_data[:train.shape[0]].mean()，來填補all_data的缺失值，
而all_data[:train.shape[0]].mean()代表的是選取train.shape[0]以前行數的平均值

9. 正則化（Regularization）：
=>在模型訓練中加入正則項以防止過擬合。
=>常見的正則化方法包括 L1 正則化（Lasso）和 L2 正則化（Ridge）。
(注意: Regularization != Normalization)

***正則化的意義
    L1 正則化（Lasso）：
        增加一個絕對值的懲罰項，有助於特徵選擇（一些特徵的係數可能會被壓縮為 0）。
    L2 正則化（Ridge）：
        增加一個平方和的懲罰項，有助於減少模型複雜度（所有特徵的係數會被壓縮，但不會變成 0）。

10. "pd.Series" 可以看作是一維的數據容器，類似於列表或數組，並且有一個與之對應的索引
=>此處以alphas建立對應索引

11. 第150行中".alpha_"在 Scikit-learn 的模型中的屬性用於存儲在模型訓練過程中選擇的最佳 alpha 值。
這通常是在進行超參數調整（例如使用交叉驗證）時得到的最佳值。

--------------------------XGBoost--------------------------
12. 第155行中
xgb.DMatrix 的功能
=>數據儲存：
DMatrix 結構專門為 XGBoost 設計，用於高效儲存訓練數據及其標籤。它會將數據轉換為內部格式，以便於快速的計算和處理。

=>記憶體優化：
DMatrix 支援記憶體優化和高效的數據儲存，尤其是在處理大型數據集時。它能夠處理稀疏數據，並對數據進行壓縮以節省記憶體。

13. 第157行中
=> max_depth：
描述：控制樹的最大深度。深度越大，樹越複雜，模型能夠擬合更多的數據。較大的 max_depth 可能會導致過擬合。
預設值：通常預設為 6，但可以根據具體情況調整。
影響：增大 max_depth 可以捕捉更多的特徵，但可能會增加計算量和過擬合風險。

=> eta（又稱 learning_rate）：
描述：控制每次樹的貢獻度的學習率。eta 越小，每棵樹對最終預測的貢獻越小，學習過程越穩定，但需要更多的樹來達到相同的效果。
預設值：通常預設為 0.3，但根據需要可以調整。
影響：小的 eta 值可以提高模型的泛化能力，減少過擬合風險，但可能需要更多的迭代次數（樹）來達到最佳效果。

14. 第208行中
index = False:
功能：不將 DataFrame 的索引列儲存到 CSV 文件中。
用途：通常在輸出 CSV 文件時，索引列對於最終的數據結果並不是必需的，特別是當你希望 CSV 文件只包含數據列時。
使用 index = False 可以避免將這些索引列寫入 CSV 文件，讓文件更簡潔。


